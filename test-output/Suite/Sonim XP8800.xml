<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="LAPTOP-7G8T14EK" ignored="0" name="Sonim XP8800" tests="2" failures="2" timestamp="29 Dec 2020 13:07:08 GMT" time="2.73" errors="0">
  <testcase name="runScenario" time="0.093" classname="testrunners.MyTestRunner">
    <failure type="io.cucumber.java.InvalidMethodSignatureException" message="A method annotated with Before, After, BeforeStep or AfterStep must have one of these signatures:
 * public void before_or_after(io.cucumber.java.Scenario scenario)
 * public void before_or_after()
at com.qa.factory.DriverFactory.loadCapabilities(java.lang.String,java.lang.String)

">
      <![CDATA[io.cucumber.java.InvalidMethodSignatureException: A method annotated with Before, After, BeforeStep or AfterStep must have one of these signatures:
 * public void before_or_after(io.cucumber.java.Scenario scenario)
 * public void before_or_after()
at com.qa.factory.DriverFactory.loadCapabilities(java.lang.String,java.lang.String)


at io.cucumber.java.InvalidMethodSignatureException$InvalidMethodSignatureExceptionBuilder.build(InvalidMethodSignatureException.java:52)
at io.cucumber.java.JavaHookDefinition.createInvalidSignatureException(JavaHookDefinition.java:47)
at io.cucumber.java.JavaHookDefinition.requireValidMethod(JavaHookDefinition.java:26)
at io.cucumber.java.JavaHookDefinition.<init>(JavaHookDefinition.java:18)
at io.cucumber.java.GlueAdaptor.addDefinition(GlueAdaptor.java:27)
at io.cucumber.java.JavaBackend.lambda$loadGlue$1(JavaBackend.java:42)
at io.cucumber.java.MethodScanner.scan(MethodScanner.java:49)
at io.cucumber.java.MethodScanner.scan(MethodScanner.java:40)
at io.cucumber.java.MethodScanner.scan(MethodScanner.java:25)
at io.cucumber.java.JavaBackend.lambda$loadGlue$2(JavaBackend.java:40)
at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(Unknown Source)
at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(Unknown Source)
at java.util.stream.ReferencePipeline$Head.forEach(Unknown Source)
at java.util.stream.ReferencePipeline$7$1.accept(Unknown Source)
at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
at java.util.stream.ReferencePipeline$2$1.accept(Unknown Source)
at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(Unknown Source)
at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(Unknown Source)
at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(Unknown Source)
at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
at java.util.stream.ReferencePipeline.forEach(Unknown Source)
at io.cucumber.java.JavaBackend.loadGlue(JavaBackend.java:40)
at io.cucumber.core.runner.Runner.<init>(Runner.java:52)
at io.cucumber.core.runtime.ThreadLocalRunnerSupplier.createRunner(ThreadLocalRunnerSupplier.java:51)
at java.lang.ThreadLocal$SuppliedThreadLocal.initialValue(Unknown Source)
at java.lang.ThreadLocal.setInitialValue(Unknown Source)
at java.lang.ThreadLocal.get(Unknown Source)
at io.cucumber.core.runtime.ThreadLocalRunnerSupplier.get(ThreadLocalRunnerSupplier.java:43)
at io.cucumber.core.runtime.CucumberExecutionContext.getRunner(CucumberExecutionContext.java:128)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:115)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:113)
at testrunners.MyTestRunner.runScenario(MyTestRunner.java:30)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
... Removed 16 stack frames]]>
    </failure>
  </testcase> <!-- runScenario -->
  <testcase name="runScenario" time="0.012" classname="testrunners.MyTestRunner">
    <failure type="io.cucumber.java.InvalidMethodSignatureException" message="A method annotated with Before, After, BeforeStep or AfterStep must have one of these signatures:
 * public void before_or_after(io.cucumber.java.Scenario scenario)
 * public void before_or_after()
at com.qa.factory.DriverFactory.loadCapabilities(java.lang.String,java.lang.String)

">
      <![CDATA[io.cucumber.java.InvalidMethodSignatureException: A method annotated with Before, After, BeforeStep or AfterStep must have one of these signatures:
 * public void before_or_after(io.cucumber.java.Scenario scenario)
 * public void before_or_after()
at com.qa.factory.DriverFactory.loadCapabilities(java.lang.String,java.lang.String)


at io.cucumber.java.InvalidMethodSignatureException$InvalidMethodSignatureExceptionBuilder.build(InvalidMethodSignatureException.java:52)
at io.cucumber.java.JavaHookDefinition.createInvalidSignatureException(JavaHookDefinition.java:47)
at io.cucumber.java.JavaHookDefinition.requireValidMethod(JavaHookDefinition.java:26)
at io.cucumber.java.JavaHookDefinition.<init>(JavaHookDefinition.java:18)
at io.cucumber.java.GlueAdaptor.addDefinition(GlueAdaptor.java:27)
at io.cucumber.java.JavaBackend.lambda$loadGlue$1(JavaBackend.java:42)
at io.cucumber.java.MethodScanner.scan(MethodScanner.java:49)
at io.cucumber.java.MethodScanner.scan(MethodScanner.java:40)
at io.cucumber.java.MethodScanner.scan(MethodScanner.java:25)
at io.cucumber.java.JavaBackend.lambda$loadGlue$2(JavaBackend.java:40)
at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(Unknown Source)
at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(Unknown Source)
at java.util.stream.ReferencePipeline$Head.forEach(Unknown Source)
at java.util.stream.ReferencePipeline$7$1.accept(Unknown Source)
at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
at java.util.stream.ReferencePipeline$2$1.accept(Unknown Source)
at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(Unknown Source)
at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(Unknown Source)
at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(Unknown Source)
at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
at java.util.stream.ReferencePipeline.forEach(Unknown Source)
at io.cucumber.java.JavaBackend.loadGlue(JavaBackend.java:40)
at io.cucumber.core.runner.Runner.<init>(Runner.java:52)
at io.cucumber.core.runtime.ThreadLocalRunnerSupplier.createRunner(ThreadLocalRunnerSupplier.java:51)
at java.lang.ThreadLocal$SuppliedThreadLocal.initialValue(Unknown Source)
at java.lang.ThreadLocal.setInitialValue(Unknown Source)
at java.lang.ThreadLocal.get(Unknown Source)
at io.cucumber.core.runtime.ThreadLocalRunnerSupplier.get(ThreadLocalRunnerSupplier.java:43)
at io.cucumber.core.runtime.CucumberExecutionContext.getRunner(CucumberExecutionContext.java:128)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:115)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:113)
at testrunners.MyTestRunner.runScenario(MyTestRunner.java:30)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
... Removed 16 stack frames]]>
    </failure>
  </testcase> <!-- runScenario -->
</testsuite> <!-- Sonim XP8800 -->
